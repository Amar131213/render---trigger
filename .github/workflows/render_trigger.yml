name: Trigger Render Scraper

on:
  schedule:
    - cron: '30 11 * * 1-5'  # ‡§∏‡•ã‡§Æ‡§µ‡§æ‡§∞ ‡§∏‡•á ‡§∂‡•Å‡§ï‡•ç‡§∞‡§µ‡§æ‡§∞ ‡§∂‡§æ‡§Æ 5:00 IST
  workflow_dispatch:

jobs:
  trigger_render:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render Webhook with 2-minute wait per try
        run: |
          echo "üöÄ Triggering Render /run endpoint with 2-min wait per attempt..."

          MAX_RETRIES=5
          RETRY_DELAY=60  # seconds between retries
          COUNT=0
          SUCCESS=false

          while [ $COUNT -lt $MAX_RETRIES ]; do
            echo "üîÅ Attempt $((COUNT+1)) (waiting up to 2 minutes for response)..."

            # Run curl and wait max 120 seconds for full response
            RESPONSE=$(curl --connect-timeout 30 --max-time 120 \
              -s -w "\n\nHTTP_CODE:%{http_code}\n‚è±Ô∏è Time Taken: %{time_total}s\n" \
              https://screener-scraper.onrender.com/run)

            echo "$RESPONSE"

            # Extract HTTP code
            HTTP_CODE=$(echo "$RESPONSE" | grep HTTP_CODE | cut -d ":" -f2)

            # Check for expected response
            echo "$RESPONSE" | grep -q "üü¢ Scraper started in background." && {
              echo "‚úÖ Render scraper started successfully."
              SUCCESS=true
              break
            }

            # Handle known response errors
            if [ "$HTTP_CODE" = "429" ]; then
              echo "‚ö†Ô∏è 429 Too Many Requests. Waiting ${RETRY_DELAY}s before retry..."
            elif [ "$HTTP_CODE" = "503" ]; then
              echo "‚ö†Ô∏è 503 Service Unavailable. Render is cold starting. Retrying..."
            else
              echo "‚ùå Unexpected response (HTTP $HTTP_CODE). Retrying..."
            fi

            COUNT=$((COUNT+1))
            sleep $RETRY_DELAY
          done

          if [ "$SUCCESS" = false ]; then
            echo "‚ùå All retry attempts failed. Render did not respond correctly."
            exit 1
          fi
